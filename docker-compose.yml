services:
  web:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./static:/app/static
      - ./uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/gridgame
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - SECRET_KEY=your-secret-key-here
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gridgame
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 